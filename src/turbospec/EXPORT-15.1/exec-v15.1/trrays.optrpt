Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: TRRAYS

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (TRRAYS) [1] ../source-v15.1/trrays.f(2,18)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../source-v15.1/trrays.f(64,10)
   remark #25427: Loop Statements Reordered
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model   [ ../source-v15.1/trrays.f(65,17) ]
LOOP END

LOOP BEGIN at ../source-v15.1/trrays.f(78,20)
   remark #15523: loop was not vectorized: loop control variable I was found, but loop iteration count cannot be computed before executing the loop

   LOOP BEGIN at ../source-v15.1/trrays.f(78,39)
      remark #15523: loop was not vectorized: loop control variable KI was found, but loop iteration count cannot be computed before executing the loop
   LOOP END
LOOP END

LOOP BEGIN at ../source-v15.1/trrays.f(92,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between II (95:14) and II (95:32)
   remark #25439: unrolled with remainder by 2  
LOOP END

LOOP BEGIN at ../source-v15.1/trrays.f(92,10)
<Remainder>
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../source-v15.1/trrays.f(38,10)
   remark #15534: loop was not vectorized: loop contains arithmetic if or computed goto. Consider using if-then-else statement.    [ ../source-v15.1/trrays.f(40,7) ]
LOOP END

    Report from: Code generation optimizations [cg]

../source-v15.1/trrays.f(2,18):remark #34051: REGISTER ALLOCATION : [trrays_] ../source-v15.1/trrays.f:2

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r12 r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     125
            Global    :      47
            Local     :      78
        Regenerable   :      38
        Spilled       :       4
        
    Routine stack
        Variables     :      88 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       4 [2.00e-01 ~ 0.0%]
        Spills        :       8 bytes*
            Reads     :       1 [5.00e-02 ~ 0.0%]
            Writes    :       1 [5.00e-02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
