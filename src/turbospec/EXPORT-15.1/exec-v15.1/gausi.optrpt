Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: GAUSI

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GAUSI) [1] ../source-v15.1/gausi.f(1,18)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../source-v15.1/gausi.f(51,10)
<Peeled loop for vectorization>
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(51,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(51,10)
<Alternate Alignment Vectorized Loop>
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(51,10)
<Remainder loop for vectorization>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(51,10)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(57,10)
<Peeled loop for vectorization, Predicate Optimized v1>
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(57,10)
<Predicate Optimized v1>
   remark #25422: Invariant Condition at line 59 hoisted out of this loop
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(57,10)
<Alternate Alignment Vectorized Loop, Predicate Optimized v1>
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(57,10)
<Remainder loop for vectorization, Predicate Optimized v1>
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(57,10)
<Peeled loop for vectorization, Predicate Optimized v2>
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(57,10)
<Predicate Optimized v2>
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(57,10)
<Alternate Alignment Vectorized Loop, Predicate Optimized v2>
LOOP END

LOOP BEGIN at ../source-v15.1/gausi.f(57,10)
<Remainder loop for vectorization, Predicate Optimized v2>
LOOP END

    Report from: Code generation optimizations [cg]

../source-v15.1/gausi.f(1,18):remark #34051: REGISTER ALLOCATION : [gausi_] ../source-v15.1/gausi.f:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   27[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :     333
            Global    :     101
            Local     :     232
        Regenerable   :       6
        Spilled       :      16
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      80 bytes*
            Reads     :      17 [1.31e+01 ~ 1.0%]
            Writes    :      17 [1.17e+01 ~ 0.9%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
