Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: NEWVOIGT

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (NEWVOIGT) [1] ../source-v15.1/newvoigt.f(16,21)


    Report from: Code generation optimizations [cg]

../source-v15.1/newvoigt.f(51,23):remark #34047: complex divide implemented using double FP precision instructions to maintain precision.
../source-v15.1/newvoigt.f(51,23):remark #34048: consider using complex-limited-range option to boost run time performance.
../source-v15.1/newvoigt.f(41,47):remark #34046: complex divide implemented using x87 instructions to maintain precision.
../source-v15.1/newvoigt.f(41,47):remark #34048: consider using complex-limited-range option to boost run time performance.
../source-v15.1/newvoigt.f(38,44):remark #34046: complex divide implemented using x87 instructions to maintain precision.
../source-v15.1/newvoigt.f(38,44):remark #34048: consider using complex-limited-range option to boost run time performance.
../source-v15.1/newvoigt.f(36,27):remark #34046: complex divide implemented using x87 instructions to maintain precision.
../source-v15.1/newvoigt.f(36,27):remark #34048: consider using complex-limited-range option to boost run time performance.
../source-v15.1/newvoigt.f(16,21):remark #34051: REGISTER ALLOCATION : [newvoigt_] ../source-v15.1/newvoigt.f:16

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   26[ rsi rdi mm0-mm7 zmm0-zmm15]
        
    Routine temporaries
        Total         :     299
            Global    :      15
            Local     :     284
        Regenerable   :      22
        Spilled       :       2
        
    Routine stack
        Variables     :       8 bytes*
            Reads     :      18 [5.25e+00 ~ 4.5%]
            Writes    :      18 [5.25e+00 ~ 4.5%]
        Spills        :      32 bytes*
            Reads     :       2 [2.50e-01 ~ 0.2%]
            Writes    :       2 [2.50e-01 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
