Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: TRYCK

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (TRYCK) [1] ../source-v15.1/tryck.f(1,18)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../source-v15.1/tryck.f(27,10)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../source-v15.1/tryck.f(52,26)
   remark #15523: loop was not vectorized: loop control variable NABSKO was found, but loop iteration count cannot be computed before executing the loop
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
LOOP END

LOOP BEGIN at ../source-v15.1/tryck.f(83,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../source-v15.1/tryck.f(89,9)
      remark #15523: loop was not vectorized: loop control variable NABSKO was found, but loop iteration count cannot be computed before executing the loop
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

../source-v15.1/tryck.f(1,18):remark #34051: REGISTER ALLOCATION : [tryck_] ../source-v15.1/tryck.f:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   23[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm9]
        
    Routine temporaries
        Total         :     315
            Global    :      93
            Local     :     222
        Regenerable   :     132
        Spilled       :      27
        
    Routine stack
        Variables     :     200 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      21 [8.31e+02 ~ 2.3%]
        Spills        :     176 bytes*
            Reads     :      41 [2.48e+03 ~ 6.8%]
            Writes    :      27 [8.38e+02 ~ 2.3%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
