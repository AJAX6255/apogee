Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: H2BORYSOWOPAC

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (H2BORYSOWOPAC) [1] ../source-v15.1/h2borysowopac.f(2,18)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../source-v15.1/h2borysowopac.f(38,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between at (39:11) and at (39:11)
LOOP END

LOOP BEGIN at ../source-v15.1/h2borysowopac.f(55,9)
   remark #15523: loop was not vectorized: loop control variable IW was found, but loop iteration count cannot be computed before executing the loop
LOOP END

LOOP BEGIN at ../source-v15.1/h2borysowopac.f(60,9)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../source-v15.1/h2borysowopac.f(60,9)
<Remainder loop for vectorization>
LOOP END

LOOP BEGIN at ../source-v15.1/h2borysowopac.f(65,7)
<Peeled loop for vectorization>
   remark #25436: completely unrolled by 3  
LOOP END

LOOP BEGIN at ../source-v15.1/h2borysowopac.f(65,7)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../source-v15.1/h2borysowopac.f(65,7)
<Remainder loop for vectorization>
LOOP END

    Report from: Code generation optimizations [cg]

../source-v15.1/h2borysowopac.f(2,18):remark #34051: REGISTER ALLOCATION : [h2borysowopac_] ../source-v15.1/h2borysowopac.f:2

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   18[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm4]
        
    Routine temporaries
        Total         :     186
            Global    :      56
            Local     :     130
        Regenerable   :      80
        Spilled       :      10
        
    Routine stack
        Variables     :     224 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      27 [1.41e+04 ~ 27.5%]
        Spills        :      48 bytes*
            Reads     :       7 [3.07e+00 ~ 0.0%]
            Writes    :       7 [3.07e+00 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
