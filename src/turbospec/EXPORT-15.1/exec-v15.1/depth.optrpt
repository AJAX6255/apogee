Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: DEPTH

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (DEPTH) [1] ../source-v15.1/depth.f(1,18)
  -> INLINE: (197,27) GAMMLN


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../source-v15.1/depth.f(81,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../source-v15.1/depth.f(241,10) inlined into ../source-v15.1/depth.f(235,27)
      remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model   [ ../source-v15.1/depth.f(242,9) ]
      remark #25436: completely unrolled by 6  
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

../source-v15.1/depth.f(1,18):remark #34051: REGISTER ALLOCATION : [depth_] ../source-v15.1/depth.f:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   21[ rax rdx rcx rbx rsi rdi r8-r9 r12-r15 zmm0-zmm8]
        
    Routine temporaries
        Total         :     393
            Global    :      87
            Local     :     306
        Regenerable   :     107
        Spilled       :      25
        
    Routine stack
        Variables     :     136 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      12 [6.26e+00 ~ 0.1%]
        Spills        :     200 bytes*
            Reads     :      42 [1.05e+03 ~ 10.6%]
            Writes    :      43 [8.73e+02 ~ 8.8%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================

Begin optimization report for: GAMMLN

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (GAMMLN) [2] ../source-v15.1/depth.f(227,16)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../source-v15.1/depth.f(241,10)
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model   [ ../source-v15.1/depth.f(242,9) ]
   remark #25436: completely unrolled by 6  
LOOP END

    Report from: Code generation optimizations [cg]

../source-v15.1/depth.f(227,16):remark #34051: REGISTER ALLOCATION : [gammln_] ../source-v15.1/depth.f:227

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   11[ rdi zmm0-zmm9]
        
    Routine temporaries
        Total         :      51
            Global    :      13
            Local     :      38
        Regenerable   :       3
        Spilled       :       3
        
    Routine stack
        Variables     :       0 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :       0 [0.00e+00 ~ 0.0%]
        Spills        :      24 bytes*
            Reads     :       3 [3.00e+00 ~ 5.2%]
            Writes    :       3 [3.00e+00 ~ 5.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
