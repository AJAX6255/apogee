Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: EQWIDTB

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (EQWIDTB) [1] ../source-v15.1/eqwidtb.f(1,18)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../source-v15.1/eqwidtb.f(101,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../source-v15.1/eqwidtb.f(103,12)
      remark #25399: memcopy generated
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at ../source-v15.1/eqwidtb.f(103,12)
         remark #15300: LOOP WAS VECTORIZED
      LOOP END

      LOOP BEGIN at ../source-v15.1/eqwidtb.f(103,12)
      <Remainder loop for vectorization>
      LOOP END
   LOOP END

   LOOP BEGIN at ../source-v15.1/eqwidtb.f(108,11)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between at (109:13) and at (109:13)

      LOOP BEGIN at ../source-v15.1/eqwidtb.f(109,13)
         remark #25436: completely unrolled by 5   (pre-vector) 
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../source-v15.1/eqwidtb.f(146,10)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../source-v15.1/eqwidtb.f(148,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   LOOP END

   LOOP BEGIN at ../source-v15.1/eqwidtb.f(170,12)
   <Peeled loop for vectorization>
   LOOP END

   LOOP BEGIN at ../source-v15.1/eqwidtb.f(170,12)
      remark #15300: LOOP WAS VECTORIZED
   LOOP END

   LOOP BEGIN at ../source-v15.1/eqwidtb.f(170,12)
   <Remainder loop for vectorization>
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

../source-v15.1/eqwidtb.f(104,11):remark #34026: call to memcpy implemented as a call to optimized library version
../source-v15.1/eqwidtb.f(1,18):remark #34051: REGISTER ALLOCATION : [eqwidtb_] ../source-v15.1/eqwidtb.f:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   19[ rax rdx rcx rbx rsi rdi r8-r10 r12-r15 zmm0-zmm5]
        
    Routine temporaries
        Total         :     408
            Global    :      90
            Local     :     318
        Regenerable   :     262
        Spilled       :      23
        
    Routine stack
        Variables     :     432 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :      65 [3.79e+08 ~ 8.1%]
        Spills        :     144 bytes*
            Reads     :      23 [1.07e+07 ~ 0.2%]
            Writes    :      22 [7.78e+06 ~ 0.2%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
