Intel(R) Advisor can now assist with vectorization and show optimization
  report messages with your source code.
See "https://software.intel.com/en-us/intel-advisor-xe" for details.


    Report from: Interprocedural optimizations [ipo]

INLINING OPTION VALUES:
  -inline-factor: 100
  -inline-min-size: 30
  -inline-max-size: 230
  -inline-max-total-size: 2000
  -inline-max-per-routine: 10000
  -inline-max-per-compile: 500000


Begin optimization report for: INJON

    Report from: Interprocedural optimizations [ipo]

INLINE REPORT: (INJON) [1] ../source-v15.1/injon.f(1,18)


    Report from: Loop nest, Vector & Auto-parallelization optimizations [loop, vec, par]


LOOP BEGIN at ../source-v15.1/injon.f(150,9)
   remark #15527: loop was not vectorized: function call to log10f cannot be vectorized   [ ../source-v15.1/injon.f(151,20) ]
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(159,9)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between at (159:9) and at (159:9)
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(181,7)
   remark #15301: MATERIALIZED LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(181,7)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(205,7)
   remark #15326: loop was not vectorized: implied FP exception model prevents vectorization. Consider changing compiler flags and/or directives in the source to enable fast FP model and to mask FP exceptions   [ ../source-v15.1/injon.f(206,24) ]
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(222,7)
   remark #15521: loop was not vectorized: loop control variable was not identified. Explicitly compute the iteration count before executing the loop or try using canonical loop form from OpenMP specification
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(253,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between SUM (255:9) and SUM (255:9)
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(259,10)
   remark #25084: Preprocess Loopnests: Moving Out Store    [ ../source-v15.1/injon.f(261,9) ]
   remark #25084: Preprocess Loopnests: Moving Out Store    [ ../source-v15.1/injon.f(262,9) ]
   remark #15331: loop was not vectorized: precise FP model implied by the command line or a directive prevents vectorization. Consider using fast FP model   [ ../source-v15.1/injon.f(261,9) ]
   remark #25439: unrolled with remainder by 2  
   remark #25456: Number of Array Refs Scalar Replaced In Loop: 4
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(259,10)
<Remainder>
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(277,10)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at ../source-v15.1/injon.f(279,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between at (286:11) and at (307:15)

      LOOP BEGIN at ../source-v15.1/injon.f(294,14)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between at (295:13) and at (307:15)

         LOOP BEGIN at ../source-v15.1/injon.f(307,15)
            remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
            remark #15346: vector dependence: assumed FLOW dependence between at (307:15) and at (307:15)
         LOOP END
      LOOP END
   LOOP END
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(317,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between at (319:9) and at (319:9)
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(329,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between at (330:11) and at (330:11)
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(343,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between at (344:11) and at (344:11)

   LOOP BEGIN at ../source-v15.1/injon.f(350,14)
      remark #25436: completely unrolled by 3   (pre-vector) 
   LOOP END

   LOOP BEGIN at ../source-v15.1/injon.f(353,14)
      remark #25436: completely unrolled by 2   (pre-vector) 
   LOOP END

   LOOP BEGIN at ../source-v15.1/injon.f(362,14)
      remark #25436: completely unrolled by 4   (pre-vector) 
   LOOP END
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(383,10)
   remark #15300: LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(383,10)
<Remainder loop for vectorization>
   remark #25436: completely unrolled by 1  
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(410,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between at (412:9) and at (412:9)

   LOOP BEGIN at ../source-v15.1/injon.f(412,9)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between at (412:9) and at (412:9)
   LOOP END
LOOP END

LOOP BEGIN at ../source-v15.1/injon.f(422,10)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between at (426:31) and at (430:13)

   LOOP BEGIN at ../source-v15.1/injon.f(424,12)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed OUTPUT dependence between at (426:31) and at (430:13)
      remark #25456: Number of Array Refs Scalar Replaced In Loop: 1
   LOOP END
LOOP END

    Report from: Code generation optimizations [cg]

../source-v15.1/injon.f(1,18):remark #34051: REGISTER ALLOCATION : [injon_] ../source-v15.1/injon.f:1

    Hardware registers
        Reserved     :    2[ rsp rip]
        Available    :   39[ rax rdx rcx rbx rbp rsi rdi r8-r15 mm0-mm7 zmm0-zmm15]
        Callee-save  :    6[ rbx rbp r12-r15]
        Assigned     :   27[ rax rdx rcx rbx rsi rdi r8-r15 zmm0-zmm12]
        
    Routine temporaries
        Total         :    1062
            Global    :     185
            Local     :     877
        Regenerable   :     716
        Spilled       :      29
        
    Routine stack
        Variables     :    1240 bytes*
            Reads     :       0 [0.00e+00 ~ 0.0%]
            Writes    :     190 [6.18e+04 ~ 23.2%]
        Spills        :     192 bytes*
            Reads     :      31 [3.01e+02 ~ 0.1%]
            Writes    :      27 [1.22e+02 ~ 0.0%]
    
    Notes
    
        *Non-overlapping variables and spills may share stack space,
         so the total stack size might be less than this.
    

===========================================================================
