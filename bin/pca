#!/usr/bin/env python
# encoding: utf-8
#
# @Author: Jon Holtzman
# @Date: March 2018
# @Filename: mkgrid
# @License: BSD 3-Clause
# @Copyright: Jon Holtzman


from __future__ import division
from __future__ import print_function
from __future__ import absolute_import
from __future__ import unicode_literals

import argparse
import os
import sys
import subprocess
import matplotlib
matplotlib.use('Agg')

from apogee.speclib import synth

if __name__ == '__main__' :

    parser = argparse.ArgumentParser(
        prog=os.path.basename(sys.argv[0]),
        description='Makes a synthetic spectral grid')

    parser.add_argument("planfile", type=str, help='Plan file')
    parser.add_argument("--dir")
    parser.add_argument("--plot", help='Make plots?',action="store_true")
    parser.add_argument("--test", help='reduce dims?',action="store_true")
    parser.add_argument("--writeraw", help='write uncompressed file?',action="store_true")
    parser.add_argument("--incremental", help='use incremental PCA?',action="store_true")
    parser.add_argument("--pcas",nargs='+',type=int)
    parser.add_argument("--refz",type=int,default=10)
    parser.add_argument("--done")
    parser.add_argument("--host")
    args=parser.parse_args()

    synth.pca(args.planfile,plot=args.plot,pcas=tuple(args.pcas),dir=args.dir,test=args.test,writeraw=args.writeraw,incremental=args.incremental,refz=args.refz)

    if args.done is not None :
        subprocess.call(['setdone',args.done])
        try: 
            subprocess.call(['setdone',done])
        except: pass
        print('host', args.host)
        if args.host is not None :
            try: os.remove(args.done+'.'+args.host)
            except: pass
